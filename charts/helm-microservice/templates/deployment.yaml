{{ $mounts_exist := or .Values.minikube.enabled .Values.gcpcreds_file.create .Values.persistence.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "helm-microservice.fullname" . }}
  labels:
    {{- include "helm-microservice.labels" . | nindent 4 }}
  annotations:
    {{- include "helm-microservice.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
{{- if .Values.updateStrategy }}
  strategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
{{- end }}
  selector:
    matchLabels:
      {{- include "helm-microservice.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "helm-microservice.selectorLabels" . | nindent 8 }}
        {{- if .Values.hack.recreatePod }}
        hackLifecycleTrigger: {{ randAlphaNum 10 }}
        {{- end }}
      annotations:
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
{{- if and .Values.serviceAccount .Values.serviceAccount.annotations  }}
        gcp-service-account: {{ index .Values.serviceAccount.annotations "iam.gke.io/gcp-service-account" }}
{{- end }}
    spec:
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
      {{- if .Values.serviceAccount.useExisting.enabled }}
      serviceAccountName: {{ .Values.serviceAccount.useExisting.name }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ template "helm-microservice.fullname" . }}
      {{- end }}
      {{- if .Values.imagePullSecrets.enabled }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.secretName }}
      {{- end }}
      containers:
{{- if .Values.useConfigConnector.enabled }}
      - name: cloudsql-proxy
        resources:
        resources:
          limits:
            cpu: "100m"
            memory: "100Mi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        env:
          - name: CONNECTION_NAME
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.useConfigConnector.secretRef }}"
                key: connectionName
          - name: PROJECT_ID
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.useConfigConnector.secretRef }}"
                key: projectId
        command: ["/cloud_sql_proxy",
                  "-instances=$(PROJECT_ID):$(CONNECTION_NAME)=tcp:3306"]
{{- end }}
      - name: {{ template "helm-microservice.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if .Values.command }}
        command:
        {{- range $index, $c := .Values.command }}
          - {{ $c }}
        {{- end }}
{{- end }}
{{- if .Values.args }}
        args:
        {{- range $index, $arg := .Values.args }}
          - {{ $arg }}
        {{- end }}
{{- end }}
        ports:
          - name: {{ .Values.service.portName }}
            containerPort: {{ .Values.service.internalPort }}
{{- if .Values.service.additionalPorts.enabled }}
        {{- range $k, $v := .Values.service.additionalPorts.ports }}
          - name: {{ .name }}
            containerPort: {{ .targetPort }}
        {{- end }}
{{- end }}


{{- if .Values.envFrom }}
        envFrom:
        {{- if .Values.envFrom.secretRef }}
        {{- range $key, $value := .Values.envFrom.secretRef }}
        - secretRef:
            name: {{ $value | quote }}
        {{- end }}
        {{- end }}

        {{- if .Values.envFrom.configMapRef }}
        {{- range $key, $value := .Values.envFrom.configMapRef }}
        - configMapRef:
            name: {{ $value | quote }}
        {{- end }}
        {{- end }}

{{- end }}

        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
{{- if .Values.useConfigConnector.enabled }}
          - name: DB_HOST
            value: 127.0.0.1:3306
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.useConfigConnector.secretRef }}"
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.useConfigConnector.secretRef }}"
                key: password
          - name: DATABASE_URL
            value: "postgres://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST)/{{ .Values.useConfigConnector.database.dbName }}?sslmode=disable"
{{- end }}
          - name: GCP_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: metadata.annotations['gcp-service-account']
          {{- range $key, $value := .Values.env }}
          - name: {{ $key | quote }}
            value: {{ $value | quote }}
          {{- end }}
{{- if .Values.livenessProbe.enabled }}
        livenessProbe:
{{ if .Values.livenessProbe.override.enabled }}
{{ toYaml .Values.livenessProbe.override.probe | indent 10 }}
{{ else }}
          httpGet:
            path: {{ .Values.livenessProbe.httpProbePath }}
            port: {{ .Values.service.internalPort }}
            scheme: HTTP
{{ end }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
{{- end }}

{{- if .Values.readinessProbe.enabled }}
        readinessProbe:
{{ if .Values.readinessProbe.override.enabled }}
{{ toYaml .Values.readinessProbe.override.probe | indent 10 }}
{{ else }}
          httpGet:
            path: {{ .Values.readinessProbe.httpProbePath }}
            port: {{ .Values.service.internalPort }}
            scheme: HTTP
{{ end }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
{{- end }}

{{- if .Values.startupProbe.enabled }}
        startupProbe:
{{ if .Values.startupProbe.override.enabled }}
{{ toYaml .Values.startupProbe.override.probe | indent 10 }}
{{ else }}
          httpGet:
            path: {{ .Values.startupProbe.httpProbePath }}
            port: {{ .Values.service.internalPort }}
            scheme: HTTP
{{ end }}
          initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          failureThreshold: {{ .Values.startupProbe.failureThreshold }}
{{- end }}

        resources:
{{ toYaml .Values.resources | indent 10 }}
{{ if $mounts_exist }}
        volumeMounts:
{{- if .Values.minikube.enabled }}
          - mountPath: {{ .Values.mountPath }}
            name: host-source
{{- end }}
{{- if .Values.gcpcreds_file.create }}
          - mountPath: {{ .Values.gcpcreds_file.path }}
            name: gcp-creds
            subPath: gcp-creds-file
{{- end }}

{{- if .Values.persistence.enabled }}
        {{- range .Values.persistence.volumes }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
        {{- end }} 
{{- end }}


      volumes:
{{- if .Values.minikube.enabled }}
        - name: host-source
          hostPath:
            path: {{ .Values.minikube.path }}/{{ .Values.minikube.hostPath }}
{{- end }}
{{- if .Values.gcpcreds_file.create }}
        - name: gcp-creds
          secret:
            secretName: {{ template "helm-microservice.fullname" . }}-gcp-secrets
{{- end }}
{{- if .Values.persistence.enabled }}
      {{- range .Values.persistence.volumes }}
        - name: {{ .name }}
          persistentVolumeClaim:
          {{- if .existingClaimName }}
            claimName: {{ .existingClaimName }}
          {{- else }}
            claimName: {{ .name }}
          {{- end }}
      {{- end }} 
{{- end }}
{{- end }}
